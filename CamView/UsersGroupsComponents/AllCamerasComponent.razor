@using CamView.UsersGroups
@inject IUserSettings usersetting
@inject NavigationManager NavigationManager


<div class="row">
    <div class="col">
        <div class="list-group">
            <button type="button" @onclick="@AddNewCamera" class="list-group-item list-group-item-action list-group-item-info">
                <span class="oi oi-plus"></span><span class="oi oi-video"></span>
            </button>
            @foreach (Camera c in cameraListAll)
            {
                    <button type="button" @onclick="@(e => EditCamera(c.CameraChanel))" class="list-group-item list-group-item-action">
                        @c.CameraName
                    </button>
            }

        </div>
    </div>
</div>


@if (_ShowEdit)
{
    <div class="modal fade show d-block" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">

                    <button type="button" class="close" @onclick="@OnShowEdit" aria-label="Close">
                        <span aria-hidden="true" class="text-dark">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col">

                            <CameraComponent CurentCamera="@_tCamera" />
                        </div>

                    </div>

                </div>

            </div>
        </div>
    </div>
}

@code {

    List<Camera> cameraListAll = new List<Camera>();

    Camera _tCamera = new Camera();

    protected override async Task OnInitializedAsync()
    {
        await usersetting.Load();
        cameraListAll = await usersetting.GetCameraList();
    }

    bool _ShowEdit = false;
    Task OnShowEdit()
    {
        if (_ShowEdit)
        {
            _tCamera = new Camera();
            _ShowEdit = false;
        }

        return Task.CompletedTask;
    }

    async Task EditCamera(string _chanelID)
    {
        _tCamera = await usersetting.GetCameraFromChanel(_chanelID);
        _ShowEdit = true;
    }

    Task AddNewCamera()
    {
        _tCamera = new Camera();
        _ShowEdit = true;

        return Task.CompletedTask;
    }


}
